<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>My Cargonaut – Docs</title><link>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/</link><description>Recent content in Docs on My Cargonaut</description><generator>Hugo -- gohugo.io</generator><language>de-de</language><atom:link href="https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Angebot Service</title><link>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/offer-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/offer-service/</guid><description>
&lt;pre class="mermaid hx-mt-6">
classDiagram
%% Controller
class OfferController {
- Server *server.Server
- Client *msclient.Client
- service service.Service
- AuthMiddleware *auth.AuthMiddleware
- Conn *nats.Conn
+ PayOffer()
+ OccupyOffer()
+ handleCreateOffer()
+ handleGetOffer()
+ handleGetOfferByFilter()
+ handlePostRating()
}
%% Services
class service.Service {
+ CreateOffer(offer, imageURL)
+ GetOffer(uuid)
+ GetOffersByFilter(filter)
+ OccupieOffer(id, userId, space)
+ PayOffer(id, userId)
}
class repoangebot.Offer {
- uuid ID
- string Title
- string Description
- Location Location
- float64 Price
- float64 Size
- Time AvailableFrom
- uuid Creator
}
class repoangebot.Space {
- float Width
- float Height
- float Depth
}
class repoangebot.Filter {
- float MinPrice
- float MaxPrice
- float Latitude
- float Longitude
- float Radius
}
class ratingservice.Rating {
- int Score
- string Comment
}
%% Abhängigkeiten &amp;amp; Beziehungen
OfferController --&amp;gt; service.Service
OfferController --&amp;gt; repoangebot.Offer
OfferController --&amp;gt; repoangebot.Space
OfferController --&amp;gt; repoangebot.Filter
OfferController --&amp;gt; ratingservice.Rating
OfferController --&amp;gt; msclient.Client
OfferController --&amp;gt; auth.AuthMiddleware
OfferController --&amp;gt; nats.Conn
&lt;/pre>&lt;h1>📦 Angebotservice&lt;/h1>&lt;p>Der &lt;code>angebotservice&lt;/code> stellt REST-HTTP-Endpunkte zur Verwaltung von Angeboten bereit. Dazu gehören das Erstellen, Abrufen, Buchen, Bezahlen und Bewerten von Angeboten. Die Authentifizierung erfolgt per JWT, und die Bewertung wird asynchron über NATS verarbeitet.&lt;/p>
&lt;hr>
&lt;h2>🧰 Features&lt;span class="hx-absolute -hx-mt-20" id="-features">&lt;/span>
&lt;a href="#-features" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>🔐 Authentifizierte Angebots-Erstellung&lt;/li>
&lt;li>🔎 Filterbare Angebotssuche&lt;/li>
&lt;li>💬 Bewertungen über NATS Messaging&lt;/li>
&lt;li>💳 Angebotsbuchung &amp;amp; Bezahlung&lt;/li>
&lt;li>🖼️ Bild-URL-Generierung über Medienservice&lt;/li>
&lt;li>✅ Swagger-kompatible API-Dokumentation&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>🚀 Quickstart&lt;span class="hx-absolute -hx-mt-20" id="-quickstart">&lt;/span>
&lt;a href="#-quickstart" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>Voraussetzungen&lt;span class="hx-absolute -hx-mt-20" id="voraussetzungen">&lt;/span>
&lt;a href="#voraussetzungen" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Go 1.20+&lt;/li>
&lt;li>NATS Server (erreichbar über Umgebungsvariable &lt;code>NATS_URL&lt;/code>)&lt;/li>
&lt;li>Auth-Secret (für JWT-Middleware)&lt;/li>
&lt;/ul>
&lt;h3>Beispiel: Initialisierung&lt;span class="hx-absolute -hx-mt-20" id="beispiel-initialisierung">&lt;/span>
&lt;a href="#beispiel-initialisierung" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">svc&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">service&lt;/span>.&lt;span style="color:#a6e22e">NewOfferService&lt;/span>(&lt;span style="color:#a6e22e">repo&lt;/span>, &lt;span style="color:#a6e22e">mediaClient&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">secret&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> []byte(&lt;span style="color:#e6db74">&amp;#34;dein_geheimes_jwt_secret&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">controller&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">angebotservice&lt;/span>.&lt;span style="color:#a6e22e">New&lt;/span>(&lt;span style="color:#a6e22e">svc&lt;/span>, &lt;span style="color:#a6e22e">secret&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">ListenAndServe&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;:8080&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">controller&lt;/span>.&lt;span style="color:#a6e22e">Router&lt;/span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>🔁 HTTP-Endpunkte&lt;span class="hx-absolute -hx-mt-20" id="-http-endpunkte">&lt;/span>
&lt;a href="#-http-endpunkte" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Methode&lt;/th>
&lt;th>Pfad&lt;/th>
&lt;th>Beschreibung&lt;/th>
&lt;th>Authentifizierung&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>POST&lt;/code>&lt;/td>
&lt;td>&lt;code>/angebot/filter&lt;/code>&lt;/td>
&lt;td>Angebote nach Filter abrufen&lt;/td>
&lt;td>❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>POST&lt;/code>&lt;/td>
&lt;td>&lt;code>/angebot&lt;/code>&lt;/td>
&lt;td>Neues Angebot erstellen&lt;/td>
&lt;td>✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>GET&lt;/code>&lt;/td>
&lt;td>&lt;code>/angebot/{id}&lt;/code>&lt;/td>
&lt;td>Angebot nach ID abrufen&lt;/td>
&lt;td>❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>POST&lt;/code>&lt;/td>
&lt;td>&lt;code>/angebot/{id}/occupy&lt;/code>&lt;/td>
&lt;td>Angebot buchen&lt;/td>
&lt;td>✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>POST&lt;/code>&lt;/td>
&lt;td>&lt;code>/angebot/{id}/pay&lt;/code>&lt;/td>
&lt;td>Angebot bezahlen&lt;/td>
&lt;td>✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>POST&lt;/code>&lt;/td>
&lt;td>&lt;code>/angebot/{id}/rating&lt;/code>&lt;/td>
&lt;td>Angebot bewerten (via NATS)&lt;/td>
&lt;td>✅&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>🔐 Authentifizierung&lt;span class="hx-absolute -hx-mt-20" id="-authentifizierung">&lt;/span>
&lt;a href="#-authentifizierung" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>JWT wird über den HTTP-Header &lt;code>Authorization: Bearer &amp;lt;token&amp;gt;&lt;/code> mitgesendet.&lt;/li>
&lt;li>Der Token muss die &lt;code>UserId&lt;/code> enthalten, welche vom &lt;code>auth.AuthMiddleware&lt;/code> ausgelesen und als Header &lt;code>UserId&lt;/code> weitergereicht wird.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>🧾 Beispieldatenstrukturen&lt;span class="hx-absolute -hx-mt-20" id="-beispieldatenstrukturen">&lt;/span>
&lt;a href="#-beispieldatenstrukturen" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>🎯 Angebotsstruktur (&lt;code>repoangebot.Offer&lt;/code>)&lt;span class="hx-absolute -hx-mt-20" id="-angebotsstruktur-repoangebotoffer">&lt;/span>
&lt;a href="#-angebotsstruktur-repoangebotoffer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;title&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Tiefgaragenstellplatz&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;description&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Mit direktem Zugang zum Aufzug.&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;location&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;latitude&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">48.137&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;longitude&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">11.575&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;price&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">50&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;size&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">12&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;availableFrom&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2025-07-01&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>📥 Bewertung (&lt;code>ratingservice.Rating&lt;/code>)&lt;span class="hx-absolute -hx-mt-20" id="-bewertung-ratingservicerating">&lt;/span>
&lt;a href="#-bewertung-ratingservicerating" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;score&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">5&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;comment&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Super Angebot!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>💬 NATS Messaging&lt;span class="hx-absolute -hx-mt-20" id="-nats-messaging">&lt;/span>
&lt;a href="#-nats-messaging" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Bewertungen werden nicht synchron in die Datenbank geschrieben.&lt;/li>
&lt;li>Stattdessen werden sie über NATS veröffentlicht:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Publish&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;rating.{userID}&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">body&lt;/span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>🐞 Fehlerbehandlung&lt;span class="hx-absolute -hx-mt-20" id="-fehlerbehandlung">&lt;/span>
&lt;a href="#-fehlerbehandlung" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Antworten im Fehlerfall sind konsistent aufgebaut:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Fehlerbeschreibung&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Beispiele für Statuscodes:&lt;/p>
&lt;ul>
&lt;li>&lt;code>400 Bad Request&lt;/code> – z. B. bei fehlerhafter UUID&lt;/li>
&lt;li>&lt;code>401 Unauthorized&lt;/code> – fehlende oder ungültige JWT&lt;/li>
&lt;li>&lt;code>500 Internal Server Error&lt;/code> – unerwartete Fehler&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>📚 Abhängigkeiten&lt;span class="hx-absolute -hx-mt-20" id="-abhängigkeiten">&lt;/span>
&lt;a href="#-abh%c3%a4ngigkeiten" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/gorilla/mux" target="_blank" rel="noopener">Gorilla Mux&lt;/a> – Routing&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/google/uuid" target="_blank" rel="noopener">Google UUID&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/nats-io/nats.go" target="_blank" rel="noopener">NATS Go Client&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Eigene Module:&lt;/p>
&lt;ul>
&lt;li>&lt;code>auth&lt;/code>&lt;/li>
&lt;li>&lt;code>server&lt;/code>&lt;/li>
&lt;li>&lt;code>ratingservice&lt;/code>&lt;/li>
&lt;li>&lt;code>mediaservice/msclient&lt;/code>&lt;/li>
&lt;li>&lt;code>angebotservice/service/repo_angebot&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Chat Service</title><link>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/chat-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/chat-service/</guid><description>
&lt;pre class="mermaid hx-mt-6">
classDiagram
direction TB
class ChatController {
- service: Service
- AuthMiddleware: AuthMiddleware
+HandleGetChats(w http.ResponseWriter, r *http.Request)
+CreateChat(w http.ResponseWriter, r *http.Request)
+HandleGetChat(w http.ResponseWriter, r *http.Request)
+HandleSendMessage(w http.ResponseWriter, r *http.Request)
+setupRoutes()
}
class Service {
+GetChats(userId uuid.UUID) []Chat
+CreateChat(userIds ...uuid.UUID) uuid.UUID
+GetChat(chatId, userId uuid.UUID) []Message
+SendMessage(userId, chatId uuid.UUID, content string) error
}
class AuthMiddleware {
+EnsureJWT(handler http.HandlerFunc) http.HandlerFunc
}
class Server {
+WithHandlerFunc(path string, handler http.HandlerFunc, method string)
+Error(w http.ResponseWriter, message string, statusCode int)
+GetLogger() Logger
}
ChatController --&amp;gt; Service
ChatController --&amp;gt; AuthMiddleware
ChatController --&amp;gt; Server
Service --&amp;gt; Repo
class Repo {
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;
}
&lt;/pre>&lt;h1>📦 ChatController – Dokumentation&lt;/h1>&lt;h2>🧭 Übersicht&lt;span class="hx-absolute -hx-mt-20" id="-übersicht">&lt;/span>
&lt;a href="#-%c3%bcbersicht" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Der &lt;code>ChatController&lt;/code> ist ein HTTP-Controller für den Chat-Service der Anwendung. Er stellt verschiedene REST-Endpoints zur Verfügung, um Chats zu erstellen, abzurufen und Nachrichten zu versenden. Der Controller verwendet JWT-Authentifizierung und basiert auf Gorilla Mux für das Routing.&lt;/p>
&lt;h2>🧩 Abhängigkeiten&lt;span class="hx-absolute -hx-mt-20" id="-abhängigkeiten">&lt;/span>
&lt;a href="#-abh%c3%a4ngigkeiten" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://pkg.go.dev/github.com/google/uuid" target="_blank" rel="noopener">&lt;code>github.com/google/uuid&lt;/code>&lt;/a> – zur Arbeit mit UUIDs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/gorilla/mux" target="_blank" rel="noopener">&lt;code>github.com/gorilla/mux&lt;/code>&lt;/a> – HTTP-Router.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Benutzerdefinierte Module:&lt;/p>
&lt;ul>
&lt;li>&lt;code>service&lt;/code> – enthält die Geschäftslogik für Chats.&lt;/li>
&lt;li>&lt;code>repo&lt;/code> – Schnittstelle zur Datenbank.&lt;/li>
&lt;li>&lt;code>auth&lt;/code> – JWT-Authentifizierung.&lt;/li>
&lt;li>&lt;code>server&lt;/code> – generische Server-Initialisierung und Hilfsmethoden.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>🔐 Authentifizierung&lt;span class="hx-absolute -hx-mt-20" id="-authentifizierung">&lt;/span>
&lt;a href="#-authentifizierung" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Alle Endpunkte sind durch ein JWT geschützt. Der Authentifizierungs-Middleware &lt;code>EnsureJWT()&lt;/code> überprüft den Token und stellt sicher, dass der Request gültig ist. Die &lt;code>UserId&lt;/code> wird aus dem HTTP-Header &lt;code>UserIdHeader&lt;/code> gelesen, der durch die Middleware gesetzt wird.&lt;/p>
&lt;hr>
&lt;h2>📚 API-Endpunkte&lt;span class="hx-absolute -hx-mt-20" id="-api-endpunkte">&lt;/span>
&lt;a href="#-api-endpunkte" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>&lt;code>GET /chat&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="get-chat">&lt;/span>
&lt;a href="#get-chat" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Beschreibung:&lt;/strong> Gibt alle Chats des authentifizierten Nutzers zurück.
&lt;strong>Header:&lt;/strong> &lt;code>Authorization: Bearer &amp;lt;JWT&amp;gt;&lt;/code>
&lt;strong>Antwort:&lt;/strong> JSON-Liste von &lt;code>repo.Chat&lt;/code> Objekten.&lt;/p>
&lt;h3>&lt;code>POST /chat&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="post-chat">&lt;/span>
&lt;a href="#post-chat" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Beschreibung:&lt;/strong> Erstellt einen neuen Chat mit den angegebenen Benutzer-IDs (inklusive sich selbst).
&lt;strong>Body:&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;userIds&amp;#34;&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;&amp;lt;uuid1&amp;gt;&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;&amp;lt;uuid2&amp;gt;&amp;#34;&lt;/span>, &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Antwort:&lt;/strong> ID des neu erstellten Chats als JSON-String.&lt;/p>
&lt;h3>&lt;code>GET /chat/{chatId}&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="get-chatchatid">&lt;/span>
&lt;a href="#get-chatchatid" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Beschreibung:&lt;/strong> Gibt alle Nachrichten für einen bestimmten Chat zurück.
&lt;strong>Path-Parameter:&lt;/strong> &lt;code>chatId&lt;/code> (UUID)
&lt;strong>Antwort:&lt;/strong> JSON-Liste von &lt;code>repo.Message&lt;/code> Objekten.&lt;/p>
&lt;h3>&lt;code>POST /chat/{chatId}/messages&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="post-chatchatidmessages">&lt;/span>
&lt;a href="#post-chatchatidmessages" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Beschreibung:&lt;/strong> Sendet eine Nachricht in einen bestimmten Chat.
&lt;strong>Path-Parameter:&lt;/strong> &lt;code>chatId&lt;/code> (UUID)
&lt;strong>Body:&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;content&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Hallo Welt!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Antwort:&lt;/strong> HTTP 201 Created, keine Body-Antwort.&lt;/p>
&lt;hr>
&lt;h2>⚙️ Funktionsweise im Detail&lt;span class="hx-absolute -hx-mt-20" id="-funktionsweise-im-detail">&lt;/span>
&lt;a href="#-funktionsweise-im-detail" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;strong>Initialisierung:&lt;/strong> Die Funktion &lt;code>New()&lt;/code> erstellt eine neue &lt;code>ChatController&lt;/code>-Instanz, registriert alle Routen und initialisiert den Service.&lt;/li>
&lt;li>&lt;strong>Routing:&lt;/strong> Wird durch &lt;code>setupRoutes()&lt;/code> konfiguriert.&lt;/li>
&lt;li>&lt;strong>Fehlerbehandlung:&lt;/strong> Einheitlich über die Methode &lt;code>Error(w, message, code)&lt;/code> aus der eingebetteten Server-Struktur.&lt;/li>
&lt;li>&lt;strong>Logging:&lt;/strong> Der Controller nutzt &lt;code>GetLogger().Debug()&lt;/code> zur Protokollierung von Nachrichten.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>🧪 Fehlerbehandlung&lt;span class="hx-absolute -hx-mt-20" id="-fehlerbehandlung">&lt;/span>
&lt;a href="#-fehlerbehandlung" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Die API gibt im Fehlerfall strukturierte JSON-Objekte vom Typ &lt;code>ErrorResponse&lt;/code> zurück:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Fehlermeldung&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>HTTP-Statuscodes:&lt;/p>
&lt;ul>
&lt;li>&lt;code>400 Bad Request&lt;/code>: Ungültige UUIDs, fehlerhaftes JSON etc.&lt;/li>
&lt;li>&lt;code>500 Internal Server Error&lt;/code>: Fehler aus der Geschäftslogik oder Datenbank.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>🔄 Erweiterbarkeit&lt;span class="hx-absolute -hx-mt-20" id="-erweiterbarkeit">&lt;/span>
&lt;a href="#-erweiterbarkeit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Der Controller ist modular aufgebaut:&lt;/p>
&lt;ul>
&lt;li>Neue Endpunkte können leicht durch weitere Methoden und &lt;code>WithHandlerFunc&lt;/code>-Registrierungen ergänzt werden.&lt;/li>
&lt;li>&lt;code>Service&lt;/code>-Schicht kapselt die Geschäftslogik und ist leicht austauschbar/testbar.&lt;/li>
&lt;li>Durch Middleware flexibel erweiterbar (z. B. für Rate-Limiting, Logging, etc.).&lt;/li>
&lt;/ul></description></item><item><title>Gateway</title><link>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/gateway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/gateway/</guid><description>
&lt;pre class="mermaid hx-mt-6">
classDiagram
direction TB
class Service {
+*server.Server
+*auth.AuthMiddleware
+*jwt.Decoder
+NR *natsreciver.Receiver
+WSHandler(w http.ResponseWriter, r *http.Request)
+HandleChatWS(w http.ResponseWriter, r *http.Request)
+HandleTracking(w http.ResponseWriter, r *http.Request)
+HealthCheck(w http.ResponseWriter, r *http.Request)
+LogNats()
+Close() error
}
class server.Server {
+GetLogger() zerolog.Logger
+WithHandlerFunc(path string, handler http.HandlerFunc, methods...)
+Error(w http.ResponseWriter, message string, code int)
}
class auth.AuthMiddleware {
+EnsureJWT(handler http.HandlerFunc) http.HandlerFunc
}
class jwt.Decoder {
+DecodeUUID(token string) (uuid.UUID, error)
}
class natsreciver.Receiver {
+Subscribe(subject string, handler func(*nats.Msg)) (Subscription, error)
+Publish(subject string, data []byte) error
+Close() error
}
class zerolog.Logger {
+Info()
+Debug()
+Err(error)
}
class http.Request
class http.ResponseWriter
class websocket.Conn
class TrackingRequest {
+Location repoangebot.Location
}
Service --&amp;gt; server.Server
Service --&amp;gt; auth.AuthMiddleware
Service --&amp;gt; jwt.Decoder
Service --&amp;gt; natsreciver.Receiver
Service --&amp;gt; websocket.Conn : Uses in WSHandler
Service --&amp;gt; zerolog.Logger : Uses for logging
Service --&amp;gt; TrackingRequest : Uses in HandleTracking
Service --&amp;gt; http.ResponseWriter : Handles HTTP
Service --&amp;gt; http.Request : Handles HTTP
&lt;/pre>&lt;h1>Gateway Service - Dokumentation&lt;/h1>&lt;p>Der Gateway-Service ist ein zentraler HTTP-Proxy, der eingehende Anfragen basierend auf dem URL-Pfad an die jeweils zuständigen Microservices weiterleitet.&lt;/p>
&lt;hr>
&lt;h2>Zweck&lt;span class="hx-absolute -hx-mt-20" id="zweck">&lt;/span>
&lt;a href="#zweck" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Zentrale Anlaufstelle für Clients&lt;/li>
&lt;li>Weiterleitung von HTTP-Anfragen an Microservices&lt;/li>
&lt;li>Einfaches Routing basierend auf URL-Präfixen&lt;/li>
&lt;li>Einheitliche Schnittstelle für mehrere Backend-Services&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>Routing-Regeln&lt;span class="hx-absolute -hx-mt-20" id="routing-regeln">&lt;/span>
&lt;a href="#routing-regeln" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>URL-Pfad-Präfix&lt;/th>
&lt;th>Zielservice&lt;/th>
&lt;th>Beschreibung&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>api/user/*&lt;/code>&lt;/td>
&lt;td>User-Service (z.B. &lt;code>http://userservice:8080&lt;/code>)&lt;/td>
&lt;td>Benutzerverwaltung&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>api/angebot/*&lt;/code>&lt;/td>
&lt;td>Angebot-Service (z.B. &lt;code>http://angebotservice:8080&lt;/code>)&lt;/td>
&lt;td>Angebotsverwaltung&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>api/media/*&lt;/code>&lt;/td>
&lt;td>Media-Service (z.B. &lt;code>http://mediaservice:8080&lt;/code>)&lt;/td>
&lt;td>Medienverwaltung&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>/&lt;/code> (andere)&lt;/td>
&lt;td>Frontend oder 404-Fehler&lt;/td>
&lt;td>Standardseite oder Fehlerseite&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>Nutzung als Client&lt;span class="hx-absolute -hx-mt-20" id="nutzung-als-client">&lt;/span>
&lt;a href="#nutzung-als-client" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Clients senden alle Anfragen an das Gateway (z.B. &lt;code>https://localhost/api&lt;/code>). Das Gateway sorgt automatisch dafür, dass die Anfragen beim richtigen Service landen.&lt;/p>
&lt;hr>
&lt;h2>Beispiel-Endpunkte (über Gateway)&lt;span class="hx-absolute -hx-mt-20" id="beispiel-endpunkte-über-gateway">&lt;/span>
&lt;a href="#beispiel-endpunkte-%c3%bcber-gateway" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>HTTP Methode&lt;/th>
&lt;th>Pfad&lt;/th>
&lt;th>Zweck&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>GET&lt;/td>
&lt;td>&lt;code>api/user/&lt;/code>&lt;/td>
&lt;td>Liste aller Benutzer abrufen&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>POST&lt;/td>
&lt;td>&lt;code>api/user/&lt;/code>&lt;/td>
&lt;td>Neuen Benutzer anlegen&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PUT&lt;/td>
&lt;td>&lt;code>api/user/{id}&lt;/code>&lt;/td>
&lt;td>Benutzer aktualisieren&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DELETE&lt;/td>
&lt;td>&lt;code>api/user/{id}&lt;/code>&lt;/td>
&lt;td>Benutzer löschen&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GET&lt;/td>
&lt;td>&lt;code>api/angebot/&lt;/code>&lt;/td>
&lt;td>Angebote abrufen&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GET&lt;/td>
&lt;td>&lt;code>api/media/{id}&lt;/code>&lt;/td>
&lt;td>Mediendatei abrufen&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GET&lt;/td>
&lt;td>&lt;code>/&lt;/code>&lt;/td>
&lt;td>Frontend oder Startseite&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>Vorteile&lt;span class="hx-absolute -hx-mt-20" id="vorteile">&lt;/span>
&lt;a href="#vorteile" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;strong>Vereinfachte Client-Integration:&lt;/strong> Ein einziger Endpunkt für alle Services&lt;/li>
&lt;li>&lt;strong>Flexibles Routing:&lt;/strong> Einfaches Hinzufügen neuer Services und Pfade&lt;/li>
&lt;li>&lt;strong>Zentrale Sicherheitskontrolle:&lt;/strong> Authentifizierung, Logging oder Rate-Limiting können hier zentral implementiert werden&lt;/li>
&lt;li>&lt;strong>Entkopplung der Clients von den Backend-Services&lt;/strong>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>Beispiel Client-Code (JavaScript)&lt;span class="hx-absolute -hx-mt-20" id="beispiel-client-code-javascript">&lt;/span>
&lt;a href="#beispiel-client-code-javascript" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">BASE_URL&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;https://localhost&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Benutzerliste abrufen
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">async&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">fetchUsers&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">fetch&lt;/span>(&lt;span style="color:#e6db74">`&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">BASE_URL&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/users/`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">response&lt;/span>.&lt;span style="color:#a6e22e">ok&lt;/span>) &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Error(&lt;span style="color:#e6db74">&amp;#34;Fehler beim Abrufen der Benutzer&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">response&lt;/span>.&lt;span style="color:#a6e22e">json&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Benutzer erstellen
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">async&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">createUser&lt;/span>(&lt;span style="color:#a6e22e">userData&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">fetch&lt;/span>(&lt;span style="color:#e6db74">`&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">BASE_URL&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/users/`&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">method&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;POST&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">headers&lt;/span>&lt;span style="color:#f92672">:&lt;/span> { &lt;span style="color:#e6db74">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;application/json&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">body&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">JSON&lt;/span>.&lt;span style="color:#a6e22e">stringify&lt;/span>(&lt;span style="color:#a6e22e">userData&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">response&lt;/span>.&lt;span style="color:#a6e22e">ok&lt;/span>) &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Error(&lt;span style="color:#e6db74">&amp;#34;Fehler beim Erstellen des Benutzers&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">response&lt;/span>.&lt;span style="color:#a6e22e">json&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Angebot abrufen
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">async&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">fetchAngebote&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">fetch&lt;/span>(&lt;span style="color:#e6db74">`&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">BASE_URL&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/angebote/`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">response&lt;/span>.&lt;span style="color:#a6e22e">ok&lt;/span>) &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Error(&lt;span style="color:#e6db74">&amp;#34;Fehler beim Abrufen der Angebote&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">response&lt;/span>.&lt;span style="color:#a6e22e">json&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>Login</title><link>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/login/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/login/</guid><description>
&lt;h1>Dokumentation zum Login im &lt;code>UserController&lt;/code>&lt;/h1>&lt;h2>Übersicht&lt;span class="hx-absolute -hx-mt-20" id="übersicht">&lt;/span>
&lt;a href="#%c3%bcbersicht" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Der &lt;code>UserController&lt;/code> bietet mehrere Endpunkte zur Authentifizierung von Benutzern, sowohl über klassische E-Mail/Passwort-Logins als auch über WebAuthn (Passkey)-basierte Authentifizierung. Das Ziel ist es, den Benutzer sicher zu authentifizieren und bei Erfolg ein JWT-Token zurückzugeben, das für 24 Stunden gültig ist.&lt;/p>
&lt;hr>
&lt;h2>Endpunkte und Funktionen&lt;span class="hx-absolute -hx-mt-20" id="endpunkte-und-funktionen">&lt;/span>
&lt;a href="#endpunkte-und-funktionen" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>1. Klassischer Login: &lt;code>/users/login&lt;/code> (POST)&lt;span class="hx-absolute -hx-mt-20" id="1-klassischer-login-userslogin-post">&lt;/span>
&lt;a href="#1-klassischer-login-userslogin-post" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Funktion:&lt;/strong> &lt;code>GetLoginToken&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Beschreibung:&lt;/strong>
Authentifiziert einen Benutzer anhand von E-Mail und Passwort.
Bei erfolgreicher Authentifizierung wird ein JWT-Token generiert, das 24 Stunden gültig ist.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Request Body (JSON):&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;email&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;password&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;string&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ablauf:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>E-Mail und Passwort werden aus dem JSON-Request ausgelesen.&lt;/li>
&lt;li>Benutzer wird anhand der E-Mail gesucht.&lt;/li>
&lt;li>Passwort wird mit dem gespeicherten Hash verglichen (über &lt;code>hasher.VerifyPassword&lt;/code>).&lt;/li>
&lt;li>Bei Erfolg wird ein JWT-Token erzeugt (&lt;code>EncodeUUID&lt;/code>) und als JSON zurückgegeben.&lt;/li>
&lt;li>Bei Fehlern wird ein entsprechender HTTP-Statuscode mit Fehlermeldung zurückgegeben.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Antwort (bei Erfolg):&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;token&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;JWT-Token&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Fehler:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>400: Fehler beim Lesen der Anfrage&lt;/li>
&lt;li>401: Falsches Passwort&lt;/li>
&lt;li>500: Nutzer nicht gefunden oder Fehler bei Token-Generierung&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>2. WebAuthn Login&lt;span class="hx-absolute -hx-mt-20" id="2-webauthn-login">&lt;/span>
&lt;a href="#2-webauthn-login" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>WebAuthn-Login erfolgt in zwei Schritten: Optionen abrufen und Login abschließen.&lt;/p>
&lt;h4>a) Begin WebAuthn Login: &lt;code>/users/webauthn/login/options&lt;/code> (GET)&lt;span class="hx-absolute -hx-mt-20" id="a-begin-webauthn-login-userswebauthnloginoptions-get">&lt;/span>
&lt;a href="#a-begin-webauthn-login-userswebauthnloginoptions-get" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;strong>Funktion:&lt;/strong> &lt;code>beginLogin&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Beschreibung:&lt;/strong>
Startet den WebAuthn-Login-Prozess, indem Login-Optionen generiert werden.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Query Parameter:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>email&lt;/code>: E-Mail-Adresse des Benutzers&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ablauf:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Validiert die E-Mail-Adresse.&lt;/li>
&lt;li>Benutzer wird anhand der E-Mail gesucht.&lt;/li>
&lt;li>Login-Optionen und Session-Daten werden erzeugt (&lt;code>service.webauth.BeginLogin&lt;/code>).&lt;/li>
&lt;li>Session-Daten werden im Benutzerobjekt gespeichert.&lt;/li>
&lt;li>Login-Optionen werden als JSON zurückgegeben.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Antwort (bei Erfolg):&lt;/strong> JSON mit WebAuthn-CredentialAssertion.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Fehler:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>400: Ungültige E-Mail-Adresse&lt;/li>
&lt;li>404: Benutzer nicht gefunden&lt;/li>
&lt;li>500: Interner Serverfehler&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4>b) Finish WebAuthn Login: &lt;code>/users/webauthn/login&lt;/code> (POST)&lt;span class="hx-absolute -hx-mt-20" id="b-finish-webauthn-login-userswebauthnlogin-post">&lt;/span>
&lt;a href="#b-finish-webauthn-login-userswebauthnlogin-post" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;strong>Funktion:&lt;/strong> &lt;code>finishLogin&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Beschreibung:&lt;/strong>
Verifiziert die WebAuthn-Anmeldung und gibt bei Erfolg ein JWT-Token zurück.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Query Parameter:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>email&lt;/code>: E-Mail-Adresse des Benutzers&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ablauf:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Validiert die E-Mail-Adresse.&lt;/li>
&lt;li>Benutzer wird anhand der E-Mail gesucht.&lt;/li>
&lt;li>WebAuthn-Login wird mit Session-Daten überprüft (&lt;code>service.webauth.FinishLogin&lt;/code>).&lt;/li>
&lt;li>Bei Erfolg wird ein JWT-Token für 24 Stunden generiert und zurückgegeben.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Antwort (bei Erfolg):&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;token&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;JWT-Token&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Fehler:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>400: Ungültige E-Mail-Adresse&lt;/li>
&lt;li>401: Authentifizierung fehlgeschlagen&lt;/li>
&lt;li>404: Benutzer nicht gefunden&lt;/li>
&lt;li>500: Interner Serverfehler&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>Wichtige Details&lt;span class="hx-absolute -hx-mt-20" id="wichtige-details">&lt;/span>
&lt;a href="#wichtige-details" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;strong>JWT-Token&lt;/strong>:
Ein JWT wird mit der Benutzer-ID als Payload erzeugt, gültig für 24 Stunden.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Session-Daten bei WebAuthn:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>BeginLogin&lt;/code> und &lt;code>FinishLogin&lt;/code> verwenden sessionData, die temporär im User-Objekt gespeichert werden.&lt;/li>
&lt;li>Diese Session-Daten sind notwendig zur Validierung des WebAuthn-Ablaufs.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Fehlerbehandlung:&lt;/strong>
Alle Fehler führen zu einer aussagekräftigen HTTP-Antwort mit Statuscode und Fehlermeldung.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Media Service</title><link>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/media-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/media-service/</guid><description>
&lt;pre class="mermaid hx-mt-6">
classDiagram
class MediaController {
-mediaservice *MediaService
-Server *Server
+New(svc *MediaService) MediaController
+setupRoutes()
+handleIndex(w http.ResponseWriter, r *http.Request)
+UploadPicture(w http.ResponseWriter, r *http.Request)
+DownloadPicture(w http.ResponseWriter, r *http.Request)
+GetCompoundLinks(w http.ResponseWriter, r *http.Request)
+UploadToCompoundLinks(w http.ResponseWriter, r *http.Request)
}
class MediaService {
+UploadPicture(ctx context.Context, user string, contentType string, img []byte) (string, error)
+GetPicture(ctx context.Context, name string) ([]byte, error)
+GetMultiPicture(ctx context.Context, user uuid.UUID) ([]string, error)
+UploadPictureToMulti(ctx context.Context, user string, id string, contentType string, img []byte) error
}
class Server {
+NewServer() *Server
+WithHandlerFunc(path string, handler func(http.ResponseWriter, *http.Request), method string)
+Error(w http.ResponseWriter, message string, code int)
+GetLogger() Logger
}
class Logger {
+Err(err error)
}
MediaController --&amp;gt; MediaService : uses
MediaController --&amp;gt; Server : embeds
Server --&amp;gt; Logger : uses
&lt;/pre>&lt;h1>MediaService Controller&lt;/h1>&lt;p>Der MediaService Controller stellt HTTP-Endpunkte bereit, um Bilder und Medieninhalte zu verwalten. Dies umfasst den Upload, Download und das Verwalten mehrerer Bild-Links für Benutzer oder Angebote.&lt;/p>
&lt;h2>Übersicht&lt;span class="hx-absolute -hx-mt-20" id="übersicht">&lt;/span>
&lt;a href="#%c3%bcbersicht" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Der Controller ist Teil des MediaService und bindet sich an die Business-Logik (&lt;code>service.MediaService&lt;/code>) sowie den HTTP-Server (&lt;code>server.Server&lt;/code>). Er bietet folgende Funktionalitäten:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Upload einzelner Bilder&lt;/strong> (z.B. Profilbilder, Banner)&lt;/li>
&lt;li>&lt;strong>Download einzelner Bilder&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Verwalten von &amp;ldquo;Compound Links&amp;rdquo;&lt;/strong>, d.h. mehreren Bildern, die einem Nutzer oder Objekt zugeordnet sind (z.B. mehrere Bilder zu einem Angebot)&lt;/li>
&lt;li>&lt;strong>Healthcheck&lt;/strong>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>Endpunkte&lt;span class="hx-absolute -hx-mt-20" id="endpunkte">&lt;/span>
&lt;a href="#endpunkte" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>GET &lt;code>/media/image&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="get-mediaimage">&lt;/span>
&lt;a href="#get-mediaimage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Beschreibung:&lt;/strong> Health-Check Endpoint, gibt „Hello World“ zurück&lt;/li>
&lt;li>&lt;strong>Antwort:&lt;/strong> 200 OK, Text „Hello World“&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>POST &lt;code>/media/image&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="post-mediaimage">&lt;/span>
&lt;a href="#post-mediaimage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;strong>Beschreibung:&lt;/strong> Upload eines einzelnen Bildes für den authentifizierten Benutzer&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Headers:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>Authorization&lt;/code> (JWT Token, Pflicht)&lt;/li>
&lt;li>&lt;code>Content-Type&lt;/code> (z.B. &lt;code>image/jpeg&lt;/code>, Pflicht)&lt;/li>
&lt;li>&lt;code>UserId&lt;/code> (User-ID im Header)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Body:&lt;/strong> Bilddaten (rohe Bytes)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Antwort:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>200 OK mit JSON &lt;code>{ &amp;quot;name&amp;quot;: &amp;quot;&amp;lt;Bildname&amp;gt;&amp;quot;, &amp;quot;success&amp;quot;: true }&lt;/code>&lt;/li>
&lt;li>Fehlercodes: 400 (Bad Request), 500 (Serverfehler)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>GET &lt;code>/media/image/{id}&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="get-mediaimageid">&lt;/span>
&lt;a href="#get-mediaimageid" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;strong>Beschreibung:&lt;/strong> Download eines Bildes anhand des Namens/IDs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Parameter:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>id&lt;/code> (Pfadparameter, Bildname)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Antwort:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>200 OK mit Bilddaten (&lt;code>image/jpeg&lt;/code>)&lt;/li>
&lt;li>Fehlercodes: 400, 500&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>GET &lt;code>/media/multi/{id}&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="get-mediamultiid">&lt;/span>
&lt;a href="#get-mediamultiid" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;strong>Beschreibung:&lt;/strong> Gibt eine Liste von URLs zurück, die zu mehreren Bildern (Compound Links) eines Nutzers gehören&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Parameter:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>id&lt;/code> (Pfadparameter, User UUID)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Antwort:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>200 OK mit JSON-Array von Bild-URLs&lt;/li>
&lt;li>Fehlercodes: 400, 500&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>POST &lt;code>/media/multi/{id}&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="post-mediamultiid">&lt;/span>
&lt;a href="#post-mediamultiid" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;strong>Beschreibung:&lt;/strong> Upload eines Bildes, das mit Compound Links für einen bestimmten User/Offer verknüpft wird&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Headers:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>Authorization&lt;/code> (JWT Token)&lt;/li>
&lt;li>&lt;code>Content-Type&lt;/code> (z.B. &lt;code>image/jpeg&lt;/code>)&lt;/li>
&lt;li>&lt;code>UserId&lt;/code> (User-ID im Header)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Parameter:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>id&lt;/code> (Pfadparameter, Compound Link ID)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Body:&lt;/strong> Bilddaten (rohe Bytes)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Antwort:&lt;/strong> 200 OK bei Erfolg&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Fehlercodes:&lt;/strong> 400, 500&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>Implementierungsdetails&lt;span class="hx-absolute -hx-mt-20" id="implementierungsdetails">&lt;/span>
&lt;a href="#implementierungsdetails" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Nutzt &lt;code>github.com/gorilla/mux&lt;/code> für Routing.&lt;/li>
&lt;li>Setzt voraus, dass der User über den &lt;code>UserIdHeader&lt;/code> im HTTP Header identifiziert wird.&lt;/li>
&lt;li>Nutzt den MediaService (&lt;code>service.MediaService&lt;/code>) für alle Business-Logik Operationen (Upload, Download, Verwaltung von Compound Links).&lt;/li>
&lt;li>Fehler werden als JSON mit &lt;code>{ &amp;quot;message&amp;quot;: &amp;quot;Fehlermeldung&amp;quot; }&lt;/code> zurückgegeben.&lt;/li>
&lt;li>Unterstützt Multipart-Bild-Uploads nicht (rohe Bytes im Request Body).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>Beispiel-Request Upload Bild&lt;span class="hx-absolute -hx-mt-20" id="beispiel-request-upload-bild">&lt;/span>
&lt;a href="#beispiel-request-upload-bild" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -X POST &lt;span style="color:#e6db74">&amp;#34;http://localhost:8080/media/image&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -H &lt;span style="color:#e6db74">&amp;#34;Authorization: Bearer &amp;lt;jwt-token&amp;gt;&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -H &lt;span style="color:#e6db74">&amp;#34;UserId: &amp;lt;user-uuid&amp;gt;&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -H &lt;span style="color:#e6db74">&amp;#34;Content-Type: image/jpeg&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --data-binary &lt;span style="color:#e6db74">&amp;#34;@meinbild.jpg&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>Fehlerbehandlung&lt;span class="hx-absolute -hx-mt-20" id="fehlerbehandlung">&lt;/span>
&lt;a href="#fehlerbehandlung" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Der Controller gibt bei Fehlern aussagekräftige HTTP-Statuscodes zurück:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Statuscode&lt;/th>
&lt;th>Bedeutung&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>400&lt;/td>
&lt;td>Ungültige Anfrage (z.B. fehlende Parameter, fehlerhafte UUID)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>500&lt;/td>
&lt;td>Interner Serverfehler (z.B. Probleme beim Zugriff auf Medienservice)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr></description></item><item><title>Rating Service</title><link>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/rating-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/rating-service/</guid><description>
&lt;pre class="mermaid hx-mt-6">
classDiagram
class Service {
+setupRoutes()
+HandleGetRatings(w http.ResponseWriter, r *http.Request)
+GetRatings(userID uuid.UUID) ([]Rating, error)
+Error(w http.ResponseWriter, message string, statusCode int)
}
class ErrorResponse {
+Message string
}
class Rating {
+ID uuid.UUID
+UserID uuid.UUID
+Score int
+Comment string
}
Service &amp;#34;1&amp;#34; --&amp;gt; &amp;#34;*&amp;#34; Rating : returns
&lt;/pre>&lt;h1>Rating Service API&lt;/h1>&lt;p>Der Rating Service stellt eine HTTP-API zur Verfügung, um Bewertungen (Ratings) für Benutzer abzurufen.&lt;/p>
&lt;h2>Endpunkt: GET /ratings/{user}&lt;span class="hx-absolute -hx-mt-20" id="endpunkt-get-ratingsuser">&lt;/span>
&lt;a href="#endpunkt-get-ratingsuser" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>Beschreibung&lt;span class="hx-absolute -hx-mt-20" id="beschreibung">&lt;/span>
&lt;a href="#beschreibung" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Ruft alle Bewertungen für einen bestimmten Benutzer ab.&lt;/p>
&lt;h3>Pfadparameter&lt;span class="hx-absolute -hx-mt-20" id="pfadparameter">&lt;/span>
&lt;a href="#pfadparameter" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Typ&lt;/th>
&lt;th>Pflicht&lt;/th>
&lt;th>Beschreibung&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>user&lt;/td>
&lt;td>string&lt;/td>
&lt;td>ja&lt;/td>
&lt;td>UUID des Benutzers, für den die Bewertungen abgefragt werden&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Anfrage&lt;span class="hx-absolute -hx-mt-20" id="anfrage">&lt;/span>
&lt;a href="#anfrage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>
&lt;p>Methode: &lt;code>GET&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>URL: &lt;code>/ratings/{user}&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Header:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Accept: application/json&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>Antwort&lt;span class="hx-absolute -hx-mt-20" id="antwort">&lt;/span>
&lt;a href="#antwort" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>
&lt;p>Erfolgsfall (&lt;code>200 OK&lt;/code>):
Ein JSON-Array mit den Bewertungen des angegebenen Benutzers.
Beispiel:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;uuid&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;userID&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;uuid&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;score&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">5&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;comment&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Great service!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Fehlerfälle:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>400 Bad Request&lt;/code>: Wenn die übergebene Benutzer-ID keine gültige UUID ist.
Beispiel:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;invalid UUID format&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;code>500 Internal Server Error&lt;/code>: Wenn ein unerwarteter Fehler beim Abrufen der Bewertungen auftritt.
Beispiel:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;database error&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>Hinweise&lt;span class="hx-absolute -hx-mt-20" id="hinweise">&lt;/span>
&lt;a href="#hinweise" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Die Benutzer-ID muss im UUID-Format vorliegen.&lt;/li>
&lt;li>Die Methode &lt;code>GetRatings(userID uuid.UUID)&lt;/code> wird verwendet, um die Bewertungen aus der Datenquelle zu holen.&lt;/li>
&lt;li>Die Response enthält den Content-Type Header &lt;code>application/json&lt;/code>.&lt;/li>
&lt;/ul></description></item><item><title>Tracking Service</title><link>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/tracking-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/tracking-service/</guid><description>
&lt;pre class="mermaid hx-mt-6">
classDiagram
class TrackingService {
- queue *nats.Conn
- logger zerolog.Logger
- offerClient *offerclient.OfferClient
- mongoClient TrackingRepo
+ NewTrackingService(natsURL string, offerURL string, mongoURL string) TrackingService
+ WithLogger(logger zerolog.Logger) TrackingService
+ Start()
}
class TrackingRepo {
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;
+ SaveTracking(tracking Tracking) error
}
class mongoTrackingRepo {
- trackingCollection *mongo.Collection
+ SaveTracking(tracking Tracking) error
}
TrackingRepo &amp;lt;|.. mongoTrackingRepo
class Location {
+ Latitude float64
+ Longitude float64
}
TrackingService --&amp;gt; TrackingRepo : uses
&lt;/pre>&lt;h1>Tracking Service Dokumentation&lt;/h1>&lt;h2>Überblick&lt;span class="hx-absolute -hx-mt-20" id="überblick">&lt;/span>
&lt;a href="#%c3%bcberblick" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Der Tracking Service ist verantwortlich für das Erfassen, Speichern und Weiterleiten von Tracking-Daten der Benutzer. Er empfängt Tracking-Informationen über eine NATS-Messaging-Queue, speichert diese in einer MongoDB-Datenbank und veröffentlicht Tracking-Daten an verbundene Nutzer basierend auf verfügbaren Angeboten.&lt;/p>
&lt;hr>
&lt;h2>Komponenten&lt;span class="hx-absolute -hx-mt-20" id="komponenten">&lt;/span>
&lt;a href="#komponenten" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>1. Repository (package &lt;code>repo&lt;/code>)&lt;span class="hx-absolute -hx-mt-20" id="1-repository-package-repo">&lt;/span>
&lt;a href="#1-repository-package-repo" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>&lt;code>mongoTrackingRepo&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="mongotrackingrepo">&lt;/span>
&lt;a href="#mongotrackingrepo" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Verwaltet die MongoDB-Verbindung und die Sammlung (&lt;code>tracking&lt;/code>).&lt;/li>
&lt;li>Verbindet sich mit der MongoDB über die URI beim Erstellen (&lt;code>NewMongoTrackingRepo&lt;/code>).&lt;/li>
&lt;li>Speichert Tracking-Daten mit &lt;code>SaveTracking(tracking Tracking) error&lt;/code> in die MongoDB.&lt;/li>
&lt;/ul>
&lt;h4>&lt;code>Tracking&lt;/code> (Struct)&lt;span class="hx-absolute -hx-mt-20" id="tracking-struct">&lt;/span>
&lt;a href="#tracking-struct" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>
&lt;p>Repräsentiert ein Tracking-Dokument, das gespeichert wird.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Felder:&lt;/p>
&lt;ul>
&lt;li>&lt;code>UserID&lt;/code> (UUID): Die ID des Benutzers, zu dem das Tracking gehört.&lt;/li>
&lt;li>&lt;code>Tracking&lt;/code> (gateway.TrackingRequest): Das eigentliche Tracking-Objekt, das Standort- und weitere Tracking-Daten enthält.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>&lt;code>TrackingRepo&lt;/code> (Interface)&lt;span class="hx-absolute -hx-mt-20" id="trackingrepo-interface">&lt;/span>
&lt;a href="#trackingrepo-interface" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Definiert die Methode &lt;code>SaveTracking(Tracking) error&lt;/code>, um Tracking-Daten zu speichern.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>2. TrackingService (package &lt;code>trackingservice&lt;/code>)&lt;span class="hx-absolute -hx-mt-20" id="2-trackingservice-package-trackingservice">&lt;/span>
&lt;a href="#2-trackingservice-package-trackingservice" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>Struktur&lt;span class="hx-absolute -hx-mt-20" id="struktur">&lt;/span>
&lt;a href="#struktur" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;code>queue&lt;/code> (*nats.Conn): Verbindung zur NATS-Messaging-Queue.&lt;/li>
&lt;li>&lt;code>logger&lt;/code> (zerolog.Logger): Logger für Ereignisse und Fehler.&lt;/li>
&lt;li>&lt;code>offerClient&lt;/code> (*offerclient.OfferClient): Client zum Abrufen von Angeboten.&lt;/li>
&lt;li>&lt;code>mongoClient&lt;/code> (repo.TrackingRepo): Repository zum Speichern der Tracking-Daten in MongoDB.&lt;/li>
&lt;/ul>
&lt;h4>Konstruktor&lt;span class="hx-absolute -hx-mt-20" id="konstruktor">&lt;/span>
&lt;a href="#konstruktor" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">NewTrackingService&lt;/span>(&lt;span style="color:#a6e22e">natsURL&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>, &lt;span style="color:#a6e22e">offerURL&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>, &lt;span style="color:#a6e22e">mongoURL&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>) &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">TrackingService&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Initialisiert alle notwendigen Komponenten (NATS-Verbindung, Logger, OfferClient, MongoDB Repository).&lt;/li>
&lt;li>Verbindet sich mit NATS, Offer-Service und MongoDB.&lt;/li>
&lt;/ul>
&lt;h4>Methoden&lt;span class="hx-absolute -hx-mt-20" id="methoden">&lt;/span>
&lt;a href="#methoden" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;code>WithLogger(logger zerolog.Logger) *TrackingService&lt;/code>: Ermöglicht das Setzen eines benutzerdefinierten Loggers.&lt;/li>
&lt;li>&lt;code>Start()&lt;/code>: Startet den Service und abonniert Tracking-Nachrichten auf dem NATS-Subject &lt;code>tracking.user.*&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>Funktionsweise (&lt;code>Start&lt;/code> Methode)&lt;span class="hx-absolute -hx-mt-20" id="funktionsweise-start-methode">&lt;/span>
&lt;a href="#funktionsweise-start-methode" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>
&lt;p>Abonnement auf NATS Topic &lt;code>tracking.user.*&lt;/code>, wobei &lt;code>*&lt;/code> die UserID ist.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Empfangene Nachrichten werden verarbeitet:&lt;/p>
&lt;ul>
&lt;li>Extrahieren der UserID aus dem Topic.&lt;/li>
&lt;li>Abrufen der relevanten Angebote für diesen User über den &lt;code>offerClient&lt;/code>.&lt;/li>
&lt;li>Wenn keine Angebote gefunden wurden, wird die Nachricht verworfen.&lt;/li>
&lt;li>Deserialisierung der Tracking-Daten (&lt;code>TrackingRequest&lt;/code>).&lt;/li>
&lt;li>Speicherung der Tracking-Daten in MongoDB.&lt;/li>
&lt;li>Weiterleitung der Tracking-Daten an alle Benutzer, die im &lt;code>OccupiedSpace&lt;/code> des Angebots enthalten sind.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Fehler beim Parsen, Abrufen, Speichern oder Veröffentlichen werden geloggt.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>Abhängigkeiten&lt;span class="hx-absolute -hx-mt-20" id="abhängigkeiten">&lt;/span>
&lt;a href="#abh%c3%a4ngigkeiten" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>MongoDB (Datenbank für Tracking-Daten).&lt;/li>
&lt;li>NATS (Messaging-System für Event-basierte Kommunikation).&lt;/li>
&lt;li>&lt;code>offerclient&lt;/code> (Client zur Kommunikation mit dem Angebot-Service).&lt;/li>
&lt;li>&lt;code>zerolog&lt;/code> (Logging-Framework).&lt;/li>
&lt;li>UUID (Identifikation von Benutzern).&lt;/li>
&lt;li>&lt;code>gateway.TrackingRequest&lt;/code> (Datenmodell für Tracking-Daten).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>Beispiel für Tracking-Daten (gateway.TrackingRequest)&lt;span class="hx-absolute -hx-mt-20" id="beispiel-für-tracking-daten-gatewaytrackingrequest">&lt;/span>
&lt;a href="#beispiel-f%c3%bcr-tracking-daten-gatewaytrackingrequest" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;location&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;latitude&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">52.5200&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;longitude&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">13.4050&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;timestamp&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2025-06-27T12:00:00Z&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>Fehlerbehandlung&lt;span class="hx-absolute -hx-mt-20" id="fehlerbehandlung">&lt;/span>
&lt;a href="#fehlerbehandlung" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Verbindungsfehler zu NATS oder MongoDB führen zu einem &lt;code>panic&lt;/code> bei Initialisierung.&lt;/li>
&lt;li>Laufzeitfehler beim Verarbeiten von Nachrichten werden geloggt, der Service läuft jedoch weiter.&lt;/li>
&lt;li>Keine Angebote für einen User führen zu einer Info-Logmeldung.&lt;/li>
&lt;/ul></description></item><item><title>User Service</title><link>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/user-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://konzepte-moderner-softwareentwicklung.github.io/Docu/docs/user-service/</guid><description>
&lt;pre class="mermaid hx-mt-6">
classDiagram
class UserController {
+Server
+AuthMiddleware
+Encoder
-service: UserService
-ratingClient: RatingClient
+GetSelfId(w http.ResponseWriter, r *http.Request)
+HandleGetRating(w http.ResponseWriter, r *http.Request)
+beginRegistration(w http.ResponseWriter, r *http.Request)
+finishRegistration(w http.ResponseWriter, r *http.Request)
+beginLogin(w http.ResponseWriter, r *http.Request)
+finishLogin(w http.ResponseWriter, r *http.Request)
+GetUsers(w http.ResponseWriter, r *http.Request)
+GetUserByEmail(w http.ResponseWriter, r *http.Request)
+CreateUser(w http.ResponseWriter, r *http.Request)
+GetUser(w http.ResponseWriter, r *http.Request)
+UpdateUser(w http.ResponseWriter, r *http.Request)
+DeleteUser(w http.ResponseWriter, r *http.Request)
+GetLoginToken(w http.ResponseWriter, r *http.Request)
}
class UserService {
+GetUserByID(uuid.UUID) User
+GetUsers() []User
+CreateUser(User) error
+UpdateUser(uuid.UUID, User) error
+DeleteUser(uuid.UUID) error
+repo: UserRepository
+webauth: WebAuthService
}
class RatingClient {
+GetRatingsByUserID(uuid.UUID) []Rating
}
class UserRepository {
+GetUserByEmail(string) User
+GetUserByID(uuid.UUID) User
+UpdateUser(User) error
}
class WebAuthService {
+BeginRegistration(User) (CredentialCreation, SessionData, error)
+FinishRegistration(User, SessionData, *http.Request) (Credential, error)
+BeginLogin(User) (CredentialAssertion, SessionData, error)
+FinishLogin(User, SessionData, *http.Request) (bool, error)
}
class User {
+ID: uuid.UUID
+Email: string
+Password: string
+SessionData: SessionData
+AddCredential(Credential)
}
UserController --&amp;gt; UserService : uses
UserController --&amp;gt; RatingClient : uses
UserService --&amp;gt; UserRepository : uses
UserService --&amp;gt; WebAuthService : uses
UserRepository ..&amp;gt; User : manages
WebAuthService ..&amp;gt; User : operates on
&lt;/pre>&lt;h1>Dokumentation zum Package &lt;code>userservice&lt;/code>&lt;/h1>&lt;h2>Überblick&lt;span class="hx-absolute -hx-mt-20" id="überblick">&lt;/span>
&lt;a href="#%c3%bcberblick" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Das Package &lt;code>userservice&lt;/code> implementiert einen HTTP-Controller zur Verwaltung von Benutzerkonten in einem Backend-System. Es bietet REST-API-Endpunkte für Benutzeroperationen wie Erstellen, Lesen, Aktualisieren, Löschen (CRUD), Authentifizierung via JWT und WebAuthn sowie Integration mit einem externen Bewertungssystem.&lt;/p>
&lt;hr>
&lt;h2>Hauptkomponenten&lt;span class="hx-absolute -hx-mt-20" id="hauptkomponenten">&lt;/span>
&lt;a href="#hauptkomponenten" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>UserController&lt;span class="hx-absolute -hx-mt-20" id="usercontroller">&lt;/span>
&lt;a href="#usercontroller" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>UserController&lt;/code> ist die zentrale Komponente, die HTTP-Anfragen entgegennimmt, verarbeitet und die Benutzerlogik koordiniert.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Felder:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>Server&lt;/code> — HTTP-Server-Basis.&lt;/li>
&lt;li>&lt;code>AuthMiddleware&lt;/code> — Middleware zur JWT-Authentifizierung.&lt;/li>
&lt;li>&lt;code>Encoder&lt;/code> — JWT-Encoder zum Erstellen von Tokens.&lt;/li>
&lt;li>&lt;code>service&lt;/code> — Business-Logik-Service für Benutzeroperationen.&lt;/li>
&lt;li>&lt;code>ratingClient&lt;/code> — Client für den Zugriff auf externe Benutzerratings.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Konstruktor:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>New(svc *UserService, secret []byte) *UserController&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Initialisiert den Controller, lädt Umgebungsvariablen (z.B. &lt;code>RATING_SERVICE_URL&lt;/code>), richtet Middleware ein und konfiguriert die API-Routen.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>API-Endpunkte und Funktionalitäten&lt;span class="hx-absolute -hx-mt-20" id="api-endpunkte-und-funktionalitäten">&lt;/span>
&lt;a href="#api-endpunkte-und-funktionalit%c3%a4ten" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>Benutzer-Endpoints&lt;span class="hx-absolute -hx-mt-20" id="benutzer-endpoints">&lt;/span>
&lt;a href="#benutzer-endpoints" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;code>GET /self&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Gibt die User-ID des aktuell authentifizierten Benutzers zurück.&lt;/li>
&lt;li>Authentifizierung via JWT erforderlich.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>GET /users&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Liefert eine Liste aller Benutzer.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>GET /users/{id}&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Liefert Details eines Benutzers anhand der UUID (Passwort wird nicht zurückgegeben).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>GET /users/email?email=...&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Liefert einen Benutzer anhand der E-Mail-Adresse.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>POST /users&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Erstellt einen neuen Benutzer mit den übergebenen JSON-Daten.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>PUT /users/{id}&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Aktualisiert den Benutzer mit der angegebenen ID. Authentifizierung via JWT erforderlich.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>DELETE /users/{id}&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Löscht den Benutzer mit der angegebenen ID. Authentifizierung via JWT erforderlich.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>Authentifizierungsendpunkte&lt;span class="hx-absolute -hx-mt-20" id="authentifizierungsendpunkte">&lt;/span>
&lt;a href="#authentifizierungsendpunkte" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;code>POST /users/login&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Authentifiziert einen Benutzer anhand von E-Mail und Passwort.&lt;/li>
&lt;li>Gibt bei Erfolg ein JWT zurück, gültig für 24 Stunden.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>WebAuthn Registrierung &amp;amp; Login&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>GET /users/webauthn/register/options&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Beginnt die WebAuthn-Registrierung (liefert Registrierungsoptionen).&lt;/li>
&lt;li>Authentifizierung via JWT erforderlich.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>POST /users/webauthn/register&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Schließt die WebAuthn-Registrierung ab.&lt;/li>
&lt;li>Authentifizierung via JWT erforderlich.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>GET /users/webauthn/login/options?email=...&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Beginnt die WebAuthn-Login-Prozedur (liefert Loginoptionen).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>POST /users/webauthn/login?email=...&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Schließt den WebAuthn-Login ab und gibt ein JWT zurück.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>Externe Bewertung&lt;span class="hx-absolute -hx-mt-20" id="externe-bewertung">&lt;/span>
&lt;a href="#externe-bewertung" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;code>GET /users/{id}/rating&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Ruft Bewertungen des Benutzers vom externen Rating-Service ab.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>Fehlerbehandlung&lt;span class="hx-absolute -hx-mt-20" id="fehlerbehandlung">&lt;/span>
&lt;a href="#fehlerbehandlung" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Fehler werden meist als JSON-Antwort mit einer &lt;code>ErrorResponse&lt;/code> zurückgegeben, die eine Fehlermeldung (&lt;code>Message&lt;/code>) enthält. Statuscodes wie 400 (Bad Request), 401 (Unauthorized), 404 (Not Found) und 500 (Internal Server Error) werden entsprechend gesetzt.&lt;/p>
&lt;hr>
&lt;h2>Middleware und CORS&lt;span class="hx-absolute -hx-mt-20" id="middleware-und-cors">&lt;/span>
&lt;a href="#middleware-und-cors" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Der Controller setzt CORS-Header dynamisch basierend auf dem Origin der Anfrage. Zudem schützt er kritische Endpunkte mit JWT-Authentifizierung mittels Middleware.&lt;/p>
&lt;hr>
&lt;h2>Beispiel für eine typische Benutzeranfrage&lt;span class="hx-absolute -hx-mt-20" id="beispiel-für-eine-typische-benutzeranfrage">&lt;/span>
&lt;a href="#beispiel-f%c3%bcr-eine-typische-benutzeranfrage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>Ein Client sendet eine POST-Anfrage an &lt;code>/users/login&lt;/code> mit E-Mail und Passwort.&lt;/li>
&lt;li>Der Controller validiert die Eingaben, überprüft das Passwort und generiert ein JWT.&lt;/li>
&lt;li>Dieses JWT wird vom Client gespeichert und für zukünftige autorisierte Anfragen im Authorization-Header mitgeschickt.&lt;/li>
&lt;li>Bei Zugriff auf geschützte Endpunkte wird das Token validiert, und die angeforderte Operation ausgeführt.&lt;/li>
&lt;/ol></description></item></channel></rss>