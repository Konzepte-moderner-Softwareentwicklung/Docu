{"/docs/":{"data":{"-how-to-run#‚öôÔ∏è How to Run":" Make sure you have Docker and Docker Compose installed.\nClone the repository:\ngit clone https://github.com/Konzepte-moderner-Softwareentwicklung/Backend.git cd Backend ","-overview#üöÄ Overview":"This Docker Compose setup orchestrates multiple services that together form a microservices-based application ecosystem. It is only intended for development purposes and includes:\nNATS \u0026 NATS UI: Messaging system with JetStream enabled for event streaming and an admin UI for monitoring. MongoDB: Document-oriented NoSQL database for data storage. MinIO: High-performance, S3-compatible object storage. Various Application Services: Gateway: API gateway routing requests. User Service: Manages user data and authentication. Angebot Service: Business-specific service for offers management. Media Service: Handles media file uploads and processing. Frontend \u0026 NGINX: Web frontend served through NGINX with HTTPS support. ","-services-included#üì¶ Services Included":" Service Description Ports nats Messaging server with JetStream enabled 4222, 8222 nats-ui NATS monitoring UI 31311 mongo MongoDB database 27017 minio Object storage (S3 compatible) 9000 (API), 9001 (Console) gateway API Gateway 8081 user-service User management 8082 angebot-service Offers management 8084 media-service Media handling 8083 frontend Web frontend 8080 nginx Reverse proxy \u0026 HTTPS termination 80, 443 ","microservices-architecture--docker-compose-setup#Microservices Architecture ‚Äî Docker Compose Setup!":"Microservices Architecture ‚Äî Docker Compose Setup!Welcome to the documentation for the microservices architecture development environment! This repository includes a docker-compose.yml file designed to spin up all necessary services for local development."},"title":"Docs"}}